{"beliefs":{"student_knowledge":{"Conjuntos Disjuntos":{"comprension":0.85,"precision":0.95,"profundidad":0.75},"Algoritmo Union-Find":{"comprension":0.85,"precision":0.95,"profundidad":0.75},"Union by Rank":{"comprension":0.75,"precision":0.9,"profundidad":0.6},"Encontrar componentes conexos":{"comprension":0.85,"precision":0.95,"profundidad":0.75},"Nodos clásicos":{"comprension":0.85,"precision":0.85,"profundidad":0.75},"Nodos cuánticos":{"comprension":0.85,"precision":0.85,"profundidad":0.75},"Aristas clásicas":{"comprension":0.85,"precision":0.85,"profundidad":0.75},"Aristas cuánticas":{"comprension":0.85,"precision":0.85,"profundidad":0.75}},"learning_preferences":[],"misconceptions":[]},"desires":{"primary_goal":"Al finalizar la sesión, el estudiante será capaz de implementar correctamente el algoritmo de Union-Find para conjuntos disjuntos, aplicándolo a un problema de conectividad en un grafo.","secondary_goals":["El estudiante podrá explicar los conceptos de conjunto disjunto, padre y raíz en el contexto del algoritmo Union-Find.","El estudiante podrá analizar la complejidad temporal del algoritmo Union-Find en diferentes escenarios.","El estudiante podrá comparar y contrastar diferentes implementaciones del algoritmo Union-Find (ej. usando path compression y union by rank)."],"success_criteria":{"comprension":0.9,"precision":0.9,"profundidad":0.8}},"intentions":{"action_plan":["\"\"\"Paso 2: Explicación del algoritmo Union-Find con ejemplos sencillos (ej. unir conjuntos de personas).\"\"\"","\"\"\"Paso 1: Introducción al concepto de conjuntos disjuntos y su representación.\"\"\"","\"\"\"Paso 5:  Ejercicios de práctica con grafos de diferente complejidad. Se revisarán las soluciones y se abordarán los errores.\"\"\"","\"\"\"Paso 3: Aplicación del algoritmo Union-Find a un problema de conectividad en un grafo simple (ej. determinar si dos nodos están conectados).\"\"\"","\"\"\"Paso 4: Implementación práctica del algoritmo en Python. Se proporcionará código base y se resolverán dudas.\"\"\""],"current_step":0,"fallback_strategy":"provide_more_examples"}}